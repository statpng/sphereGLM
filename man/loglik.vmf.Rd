% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary.sphereGLM.R
\name{loglik.vmf}
\alias{loglik.vmf}
\title{#' @export summary.sphereGLM2
summary.sphereGLM2 <- function(fit, scale=FALSE, orthogonal=NULL){
  
  if( class(fit) == "try-error" ){
    return( list(beta=NA,
                 norm=NA, 
                 fisher=NA,
                 wald=NA,
                 pvalue=NA) )
  }
  
  if(is.null(orthogonal)){
    orthogonal <- fit$params$orthogonal
  }
  
  X <- fit$X
  Y <- fit$Y
  
  p <- ncol(X)
  q <- ncol(Y)
  n <- nrow(Y)
  
  if( scale ){
    beta_new <- fit$beta2
  } else {
    beta_new <- fit$beta
  }
  
  
  F_nj.list <- FisherInfoMatrix(X, beta_new)
  
  Wald.j.list <- sapply(1:(p+1), function(j){
    t(beta_new[j,]) %*% F_nj.list[[j]] %*% beta_new[j,]
  })
  
  
  if(orthogonal){
    df <- q-1
  } else {
    df <- q
  }
  
  
  pv.list <- sapply(Wald.j.list, function(x){
    1 - pchisq(x, df)
  })
  
  
  
  
  list(beta=beta_new,
       norm=apply(beta_new, 1, norm, "2"), 
       fisher=F_nj.list,
       orthogonal=fit$params$orthogonal,
       wald=Wald.j.list,
       df=df,
       pvalue=pv.list)
  
  
  
}}
\usage{
loglik.vmf(X, Y, beta, gamma = 0)
}
\description{
#' @export summary.sphereGLM2
summary.sphereGLM2 <- function(fit, scale=FALSE, orthogonal=NULL){
  
  if( class(fit) == "try-error" ){
    return( list(beta=NA,
                 norm=NA, 
                 fisher=NA,
                 wald=NA,
                 pvalue=NA) )
  }
  
  if(is.null(orthogonal)){
    orthogonal <- fit$params$orthogonal
  }
  
  X <- fit$X
  Y <- fit$Y
  
  p <- ncol(X)
  q <- ncol(Y)
  n <- nrow(Y)
  
  if( scale ){
    beta_new <- fit$beta2
  } else {
    beta_new <- fit$beta
  }
  
  
  F_nj.list <- FisherInfoMatrix(X, beta_new)
  
  Wald.j.list <- sapply(1:(p+1), function(j){
    t(beta_new[j,]) %*% F_nj.list[[j]] %*% beta_new[j,]
  })
  
  
  if(orthogonal){
    df <- q-1
  } else {
    df <- q
  }
  
  
  pv.list <- sapply(Wald.j.list, function(x){
    1 - pchisq(x, df)
  })
  
  
  
  
  list(beta=beta_new,
       norm=apply(beta_new, 1, norm, "2"), 
       fisher=F_nj.list,
       orthogonal=fit$params$orthogonal,
       wald=Wald.j.list,
       df=df,
       pvalue=pv.list)
  
  
  
}
}
